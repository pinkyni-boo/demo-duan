@model demo_duan.Models.Showtime
@{
    ViewData["Title"] = "Tạo Suất chiếu mới";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<!-- Thêm style trực tiếp thay vì đặt trong section -->
<style>
    .required::after {
        content: " *";
        color: red;
    }
    
    .form-select:focus,
    .form-control:focus {
        border-color: #667eea;
        box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
    }
    
    .admin-card {
        border: none;
        border-radius: 10px;
        box-shadow: 0 4px 15px rgba(0,0,0,0.1);
    }
    
    .card-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        border-radius: 10px 10px 0 0 !important;
    }
    
    .btn-admin-success {
        background: linear-gradient(135deg, #11998e 0%, #38ef7d 100%);
        border: none;
        color: white;
        padding: 10px 20px;
        border-radius: 8px;
        transition: transform 0.3s ease;
    }
    
    .btn-admin-success:hover {
        transform: translateY(-2px);
        color: white;
    }
    
    .is-invalid {
        border-color: #dc3545;
    }
    
    .alert-notification {
        animation: slideInRight 0.3s ease-out;
    }
    
    /* Keyframes phải được đặt trong CSS, không phải Razor */
    @@keyframes slideInRight {
        from {
            transform: translateX(100%);
            opacity: 0;
        }
        to {
            transform: translateX(0);
            opacity: 1;
        }
    }
    
    .loading-spinner {
        border: 2px solid #f3f3f3;
        border-top: 2px solid #3498db;
        border-radius: 50%;
        width: 20px;
        height: 20px;
        animation: spin 1s linear infinite;
        display: inline-block;
        margin-right: 5px;
    }
    
    @@keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }
</style>

<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h1 class="h3 mb-1"><i class="fas fa-calendar-plus me-2 text-primary"></i>Tạo Suất chiếu mới</h1>
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/Admin">Admin</a></li>
                <li class="breadcrumb-item"><a href="/Admin/Showtimes">Showtimes</a></li>
                <li class="breadcrumb-item active">Create</li>
            </ol>
        </nav>
    </div>
    <a asp-action="Index" class="btn btn-outline-secondary">
        <i class="fas fa-arrow-left me-1"></i>Quay lại
    </a>
</div>

<!-- Display Validation Summary -->
@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <i class="fas fa-exclamation-triangle me-2"></i>
        <strong>Vui lòng kiểm tra lại thông tin:</strong>
        <ul class="mb-0 mt-2">
            @foreach (var modelError in ViewData.ModelState)
            {
                foreach (var error in modelError.Value.Errors)
                {
                    <li>@error.ErrorMessage</li>
                }
            }
        </ul>
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<div class="row justify-content-center">
    <div class="col-lg-8">
        <div class="card admin-card">
            <div class="card-header">
                <h6 class="mb-0">
                    <i class="fas fa-plus-circle me-2"></i>Thông tin suất chiếu
                </h6>
            </div>
            <div class="card-body">
                <!-- Kiểm tra hidden fields -->
                <!-- Replace your current form opening tag with this -->
<form asp-action="Create" method="post">
    @Html.AntiForgeryToken()
    
    <input type="hidden" id="FormDebug" name="FormDebug" value="1" />
    
    <div class="alert alert-info">
        <i class="fas fa-info-circle"></i> Vui lòng điền đầy đủ thông tin suất chiếu
    </div>
    
    <div class="row">
        <!-- Movie Selection -->
        <div class="col-md-6 mb-3">
            <label for="MovieId" class="form-label required">
                <i class="fas fa-film me-1 text-primary"></i>Chọn phim
            </label>
            <!-- Thay thế select MovieId -->
<select id="MovieId" name="MovieId" class="form-select" required>
    <option value="">-- Chọn phim --</option>
    @foreach (var movie in ViewBag.Movies)
    {
        <option value="@movie.Id">@movie.Title</option>
    }
</select>
            <span class="text-danger field-validation-error" data-valmsg-for="MovieId" data-valmsg-replace="true"></span>
        </div>
        
        <!-- Theater Selection -->
        <div class="col-md-6 mb-3">
            <label for="TheaterId" class="form-label required">
                <i class="fas fa-building me-1 text-success"></i>Chọn rạp
            </label>
            <select id="TheaterId" name="TheaterId" class="form-select" required>
                <option value="">-- Chọn rạp --</option>
                @foreach (var theater in ViewBag.Theaters)
                {
                    <option value="@theater.Id">@theater.Name</option>
                }
            </select>
        </div>
    </div>
    
    <div class="row">
        <!-- Cinema Selection -->
        <div class="col-md-12 mb-3">
            <label for="CinemaId" class="form-label required">
                <i class="fas fa-video me-1 text-info"></i>Chọn phòng chiếu
            </label>
            <!-- Thay thế select CinemaId -->
<select id="CinemaId" name="CinemaId" class="form-select" required>
    <option value="">-- Vui lòng chọn rạp trước --</option>
</select>
            <span class="text-danger field-validation-error" data-valmsg-for="CinemaId" data-valmsg-replace="true"></span>
        </div>
    </div>
    
    <div class="row">
        <!-- Date and Time -->
        <div class="col-md-6 mb-3">
            <label for="ShowDate" class="form-label required">
                <i class="fas fa-calendar me-1 text-warning"></i>Ngày chiếu
            </label>
            <input type="date" id="ShowDate" name="ShowDate" class="form-control" required 
                   min="@DateTime.Today.ToString("yyyy-MM-dd")" 
                   value="@DateTime.Today.ToString("yyyy-MM-dd")">
            <span asp-validation-for="ShowDate" class="text-danger"></span>
        </div>
        
        <div class="col-md-6 mb-3">
            <label for="ShowTime" class="form-label required">
                <i class="fas fa-clock me-1 text-info"></i>Giờ chiếu
            </label>
            <input type="time" id="ShowTime" name="ShowTime" class="form-control" required 
                   value="18:00">
            <span asp-validation-for="ShowTime" class="text-danger"></span>
        </div>
    </div>
    
    <div class="row">
        <!-- Price -->
        <div class="col-md-12 mb-3">
            <label for="Price" class="form-label required">
                <i class="fas fa-money-bill-wave me-1 text-success"></i>Giá vé
            </label>
            <input type="number" id="Price" name="Price" class="form-control" required 
                   min="10000" step="1000" value="80000">
            <span asp-validation-for="Price" class="text-danger"></span>
        </div>
    </div>
    
    <!-- Debug info div - Đặt nó ở đây, trong form, trước nút submit -->
<div id="debugInfo" class="mt-3 p-3 bg-light border mb-4">
    <h6>Debug info:</h6>
    <p>MovieId: <span id="debugMovieId"></span></p>
    <p>CinemaId: <span id="debugCinemaId"></span></p>
    <p>Form Method: POST</p>
    <p>Form Action: @Url.Action("Create", "Showtimes", new { area = "Admin" })</p>
</div>

<div class="d-grid gap-2 mt-4">
    <button type="submit" class="btn btn-primary">
        <i class="fas fa-save me-1"></i>Lưu suất chiếu
    </button>
    <a asp-action="Index" class="btn btn-outline-secondary">
        <i class="fas fa-arrow-left me-1"></i>Quay lại danh sách
    </a>
</div>

</form>
@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        <h5>ModelState Errors:</h5>
        <ul>
            @foreach (var modelState in ViewData.ModelState.Values)
            {
                foreach (var error in modelState.Errors)
                {
                    <li>@error.ErrorMessage</li>
                }
            }
        </ul>
    </div>
}
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Load cinemas when theater changes
            $('#TheaterId').change(function() {
                var theaterId = $(this).val();
                var $cinemaSelect = $('#CinemaId');
                
                // Reset cinema dropdown
                $cinemaSelect.empty().append('<option value="">-- Chọn phòng chiếu --</option>');
                
                if (theaterId) {
                    // Show loading indicator
                    $cinemaSelect.append('<option value="" disabled>Đang tải...</option>');
                    
                    // Load cinemas via AJAX
                    $.get('/Admin/Showtimes/GetCinemasByTheater', { theaterId: theaterId })
                        .done(function(data) {
                            // Clear loading message
                            $cinemaSelect.empty().append('<option value="">-- Chọn phòng chiếu --</option>');
                            
                            if (data && data.length > 0) {
                                console.log("Received cinemas:", data);
                                
                                // Add options for each cinema
                                $.each(data, function(index, cinema) {
                                    console.log("Adding cinema:", cinema.id, cinema.name);
                                    
                                    var optionText = cinema.name;
                                    if (cinema.seats) {
                                        optionText += ' (' + cinema.seats + ' ghế)';
                                    }
                                    if (cinema.type) {
                                        optionText += ' - ' + cinema.type;
                                    }
                                    
                                    $cinemaSelect.append(
                                        $('<option></option>')
                                            .val(cinema.id)
                                            .text(optionText)
                                    );
                                });
                                
                                // Verify options were added correctly
                                console.log("Cinema options now:", $cinemaSelect.find('option').length);
                                
                                // Enable the cinema dropdown and focus
                                $cinemaSelect.prop('disabled', false);
                                $cinemaSelect.focus();
                            } else {
                                console.warn("No cinemas returned for theater ID:", theaterId);
                                $cinemaSelect.append('<option value="" disabled>Không có phòng chiếu</option>');
                            }
                        })
                        .fail(function(error) {
                            console.error("AJAX error:", error);
                            $cinemaSelect.empty().append('<option value="">-- Lỗi khi tải phòng chiếu --</option>');
                        });
                }
            });
            
            // Thay thế phần form validation
$('form').off('submit').on('submit', function(e) {
    // Kiểm tra validation client-side
    let movieId = $('#MovieId').val();
    let cinemaId = $('#CinemaId').val();
    
    console.log("Submit check - MovieId:", movieId, "CinemaId:", cinemaId);
    
    // Hiển thị debug trước khi submit
    $('#debugMovieId').text(movieId || 'không chọn');
    $('#debugCinemaId').text(cinemaId || 'không chọn');
    
    // Kiểm tra các trường bắt buộc
    let isValid = true;
    
    if (!movieId) {
        $('#MovieId').addClass('is-invalid');
        isValid = false;
    } else {
        $('#MovieId').removeClass('is-invalid');
    }
    
    if (!cinemaId) {
        $('#CinemaId').addClass('is-invalid');
        isValid = false;
    } else {
        $('#CinemaId').removeClass('is-invalid');
    }
    
    if (!isValid) {
        e.preventDefault();
        alert("Vui lòng điền đầy đủ thông tin bắt buộc!");
        return false;
    }
    
    // Hiển thị xác nhận form data trước khi submit
    console.log("Form submitting with verified data:");
    console.log("MovieId:", movieId);
    console.log("CinemaId:", cinemaId);
    console.log("ShowDate:", $('#ShowDate').val());
    console.log("ShowTime:", $('#ShowTime').val());
    console.log("Price:", $('#Price').val());
    
    // Submit thủ công để đảm bảo dữ liệu được gửi đúng
    var formData = new FormData(this);
    
    // Thêm thông tin debug vào form data
    formData.append('_debug_submit', '1');
    
    // Gửi form bằng fetch API
    fetch($(this).attr('action'), {
        method: 'POST',
        body: formData,
        headers: {
            'X-Requested-With': 'XMLHttpRequest'
        }
    })
    .then(response => {
        if (response.redirected) {
            window.location.href = response.url; // Chuyển hướng nếu thành công
        } else {
            return response.text();
        }
    })
    .then(html => {
        if (html) {
            // Nếu có HTML trả về, form có lỗi
            document.open();
            document.write(html);
            document.close();
        }
    })
    .catch(error => {
        console.error("Error submitting form:", error);
        alert("Đã xảy ra lỗi khi gửi form: " + error);
    });
    
    e.preventDefault(); // Ngăn form submit mặc định
    return false;
});
        });
    </script>
}