@model demo_duan.Models.Movie
@{
    ViewData["Title"] = "Đặt vé xem phim - " + Model.Title;
    var theaters = ViewBag.Theaters as List<demo_duan.Models.Theater> ?? new List<demo_duan.Models.Theater>();
    var today = DateTime.Today;
}

<div class="container mt-5 mb-5">
    @Html.AntiForgeryToken()

    <!-- Booking Progress -->
    <div class="booking-progress mb-4">
        <div class="progress-step completed">
            <div class="step-number">1</div>
            <div class="step-text">Chọn phim</div>
        </div>
        <div class="progress-connector completed"></div>
        
        <div class="progress-step active">
            <div class="step-number">2</div>
            <div class="step-text">Chọn suất chiếu</div>
        </div>
        <div class="progress-connector"></div>
        
        <div class="progress-step">
            <div class="step-number">3</div>
            <div class="step-text">Chọn ghế</div>
        </div>
        <div class="progress-connector"></div>
        
        <div class="progress-step">
            <div class="step-number">4</div>
            <div class="step-text">Thanh toán</div>
        </div>
    </div>

    <div class="row">
        <!-- Movie details column -->
        <div class="col-md-4 mb-4">
            <div class="card movie-details-card h-100">
                <div class="position-relative">
                    @if (!string.IsNullOrEmpty(Model.Img))
                    {
                        <img src="@Model.Img" class="card-img-top" alt="@Model.Title" style="height: 350px; object-fit: cover;">
                    }
                    else
                    {
                        <div class="bg-light d-flex align-items-center justify-content-center" style="height: 350px;">
                            <i class="fas fa-film fa-5x text-muted"></i>
                        </div>
                    }
                </div>
                <div class="card-body">
                    <h4 class="card-title">@Model.Title</h4>
                    <div class="mb-2">
                        <span class="badge bg-primary">@(Model.Category?.Name ?? "Chưa phân loại")</span>
                        <span class="badge bg-secondary"><i class="fas fa-clock me-1"></i>@Model.Duration phút</span>
                    </div>
                    <p class="card-text small">@Model.Description</p>
                    <div class="mt-3">
                        <p class="mb-1"><strong><i class="fas fa-calendar me-2"></i>Ngày khởi chiếu:</strong> @Model.ReleaseDate.ToString("dd/MM/yyyy")</p>
                        <p class="mb-1"><strong><i class="fas fa-user me-2"></i>Diễn viên:</strong> @Model.Actor</p>
                        <p class="mb-1"><strong><i class="fas fa-user-tie me-2"></i>Đạo diễn:</strong> @Model.Director</p>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Showtimes column -->
        <div class="col-md-8">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0"><i class="fas fa-calendar-alt me-2"></i>Chọn ngày xem phim</h5>
                </div>
                <div class="card-body">
                    <!-- Date selection -->
                    <div class="date-pills mb-4">
                        @for (int i = 0; i < 10; i++)
                        {
                            var date = today.AddDays(i);
                            var isActive = i == 0;
                            
                            <div class="date-pill @(isActive ? "active" : "")" 
                                 data-date="@date.ToString("yyyy-MM-dd")"
                                 onclick="selectDate(this, '@date.ToString("yyyy-MM-dd")')">
                                <div class="date-day">@date.ToString("ddd")</div>
                                <div class="date-number">@date.Day</div>
                                <div class="date-month">@date.ToString("MMM")</div>
                            </div>
                        }
                    </div>
                    
                    <!-- Theater selection -->
                    @foreach (var theater in theaters)
                    {
                        <a href="#theater-@theater.Id" class="theater-item" data-theater-id="@theater.Id" data-bs-toggle="collapse" role="button" aria-expanded="false">
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    <h5 class="mb-0">@theater.Name</h5>
                                    <small class="text-muted"><i class="fas fa-map-marker-alt me-1"></i>@theater.Address</small>
                                </div>
                                <i class="fas fa-chevron-down"></i>
                            </div>
                        </a>
                        
                        <div class="collapse showtime-list" id="theater-@theater.Id">
                            <div class="p-3 bg-light">
                                <div class="showtime-loading text-center d-none">
                                    <div class="spinner-border text-primary" role="status">
                                        <span class="visually-hidden">Loading...</span>
                                    </div>
                                    <p class="mt-2">Đang tải suất chiếu...</p>
                                </div>
                                
                                <div class="showtime-content" data-theater-id="@theater.Id">
                                    @if (ViewBag.SelectedTheater != null && ViewBag.SelectedTheater == theater.Id && ViewBag.GroupedShowtimes != null)
                                    {
                                        <partial name="_ShowtimesPartial" model="ViewBag.GroupedShowtimes" />
                                    }
                                    else
                                    {
                                        <div class="text-center no-showtimes">
                                            <p class="mb-0">Chọn ngày để xem lịch chiếu</p>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                    
                    @if (!theaters.Any())
                    {
                        <div class="text-center py-4">
                            <i class="fas fa-exclamation-circle fa-3x text-muted mb-3"></i>
                            <h5>Không có rạp nào đang chiếu phim này</h5>
                            <p class="text-muted">Vui lòng chọn một bộ phim khác hoặc quay lại sau.</p>
                            <div class="mt-3">
                                <a href="/Home/Movies" class="btn btn-primary">
                                    <i class="fas fa-film me-1"></i>Xem phim khác
                                </a>
                                <a href="/Home/MovieDetails/@Model.Id" class="btn btn-outline-secondary ms-2">
                                    <i class="fas fa-info-circle me-1"></i>Xem chi tiết phim
                                </a>
                            </div>
                            <div class="mt-4">
                                <div class="alert alert-info">
                                    <i class="fas fa-info-circle me-2"></i>Thông tin debug: Movie ID = @Model.Id
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Các biến toàn cục
        let selectedDate = '@(ViewBag.SelectedDate?.ToString("yyyy-MM-dd") ?? DateTime.Today.ToString("yyyy-MM-dd"))';
        let selectedTheaterId = @(ViewBag.SelectedTheaterId != null ? ViewBag.SelectedTheaterId.ToString() : "null");
        
        document.addEventListener('DOMContentLoaded', function() {
            // Khởi tạo show/hide cho các phòng
            const theaterItems = document.querySelectorAll('.theater-item');
            
            // Nếu đã có theaterId được chọn, mở rộng nó
            if (selectedTheaterId) {
                const selectedTheaterItem = document.querySelector(`[data-theater-id="${selectedTheaterId}"]`);
                if (selectedTheaterItem) {
                    // Mở rộng phần tử
                    const collapseEl = document.querySelector(selectedTheaterItem.getAttribute('href'));
                    if (collapseEl) {
                        collapseEl.classList.add('show');
                        // Thay đổi icon
                        const icon = selectedTheaterItem.querySelector('.fas');
                        if (icon) {
                            icon.classList.replace('fa-chevron-down', 'fa-chevron-up');
                        }
                    }
                }
            }
            
            // Xử lý sự kiện chọn rạp
            theaterItems.forEach(item => {
                item.addEventListener('click', function() {
                    const theaterId = this.getAttribute('data-theater-id');
                    selectedTheaterId = theaterId;
                    
                    // Toggle chevron icon
                    const icon = this.querySelector('.fas');
                    if (icon.classList.contains('fa-chevron-down')) {
                        icon.classList.replace('fa-chevron-down', 'fa-chevron-up');
                    } else {
                        icon.classList.replace('fa-chevron-up', 'fa-chevron-down');
                    }
                    
                    // Load showtimes when expanding
                    const collapseEl = document.querySelector(this.getAttribute('href'));
                    if (collapseEl && !collapseEl.classList.contains('show')) {
                        loadShowtimes(theaterId, selectedDate);
                    }
                });
            });
        });
        
        // Function để chọn ngày
        function selectDate(element, date) {
            // Bỏ chọn tất cả các nút ngày
            document.querySelectorAll('.date-pill').forEach(pill => {
                pill.classList.remove('active');
            });
            
            // Đánh dấu nút hiện tại là active
            element.classList.add('active');
            
            // Cập nhật ngày đã chọn
            selectedDate = date;
            
            // Nếu đã chọn rạp, load lại lịch chiếu
            if (selectedTheaterId) {
                loadShowtimes(selectedTheaterId, selectedDate);
            }
        }
        
        // Function để load lịch chiếu
        function loadShowtimes(theaterId, date) {
            const movieId = '@Model.Id';
            
            // Tìm phần tử theo cách chính xác hơn
            const theaterContainer = document.querySelector(`#theater-${theaterId}`);
            if (!theaterContainer) {
                console.error(`Theater container #theater-${theaterId} not found`);
                return;
            }
            
            const showtimeContent = theaterContainer.querySelector('.showtime-content');
            const loadingEl = theaterContainer.querySelector('.showtime-loading');
            
            if (!showtimeContent || !loadingEl) {
                console.error('Showtime content or loading element not found');
                return;
            }
            
            // Show loading
            showtimeContent.classList.add('d-none');
            loadingEl.classList.remove('d-none');
            
            // Chuẩn bị dữ liệu form
            const formData = new FormData();
            formData.append('movieId', movieId);
            formData.append('theaterId', theaterId);
            formData.append('date', date);
            
            // Thêm token
            const tokenElement = document.querySelector('input[name="__RequestVerificationToken"]');
            if (tokenElement) {
                formData.append('__RequestVerificationToken', tokenElement.value);
            }
            
            // Gọi đến controller action
            fetch('/Home/LoadShowtimes', {
                method: 'POST',
                body: formData,
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                }
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP error! Status: ${response.status}`);
                }
                return response.text();
            })
            .then(html => {
                showtimeContent.innerHTML = html;
                loadingEl.classList.add('d-none');
                showtimeContent.classList.remove('d-none');
            })
            .catch(error => {
                console.error('Error loading showtimes:', error);
                loadingEl.classList.add('d-none');
                showtimeContent.classList.remove('d-none');
                showtimeContent.innerHTML = `
                    <div class="alert alert-danger">
                        <i class="fas fa-exclamation-circle me-2"></i>Lỗi khi tải lịch chiếu: ${error.message || 'Unknown error'}
                        <div class="mt-2">
                            <button class="btn btn-sm btn-outline-danger" onclick="retryLoadShowtimes()">
                                <i class="fas fa-sync-alt me-1"></i>Thử lại
                            </button>
                        </div>
                    </div>
                `;
            });
        }
        
        // Function để thử lại việc load lịch chiếu
        function retryLoadShowtimes() {
            if (selectedTheaterId) {
                loadShowtimes(selectedTheaterId, selectedDate);
            }
        }
        
        // Function để chọn ngày khác
        function selectOtherDate() {
            // Cuộn lên phần chọn ngày
            const datePills = document.querySelector('.date-pills');
            if (datePills) {
                datePills.scrollIntoView({ behavior: 'smooth' });
            }
        }
        
        // Function để hiển thị thông tin debug
        function showDebugInfo() {
            const debugContainer = document.getElementById('debugInfoContainer');
            if (debugContainer) {
                debugContainer.classList.toggle('d-none');
            } else {
                const errorEl = document.querySelector('.alert-danger');
                if (errorEl) {
                    const debugHTML = `
                        <div id="debugInfoContainer" class="mt-3">
                            <div class="alert alert-secondary">
                                <h6>Thông tin debug:</h6>
                                <p>Phim ID: @Model.Id</p>
                                <p>Rạp ID: ${selectedTheaterId}</p>
                                <p>Ngày: ${selectedDate}</p>
                            </div>
                        </div>`;
                    errorEl.insertAdjacentHTML('afterend', debugHTML);
                }
            }
        }
    </script>
    
    <style>
        .movie-details-card {
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            border: none;
        }
        
        .date-pills {
            display: flex;
            overflow-x: auto;
            gap: 10px;
            padding-bottom: 10px;
        }
        
        .date-pill {
            min-width: 60px;
            border: 1px solid #dee2e6;
            border-radius: 12px;
            padding: 10px 5px;
            text-align: center;
            background: white;
            cursor: pointer;
            transition: all 0.3s ease;
        }
        
        .date-pill:hover {
            border-color: var(--bs-primary);
        }
        
        .date-pill.active {
            background: var(--bs-primary);
            color: white;
            border-color: var(--bs-primary);
        }
        
        .date-day {
            font-size: 0.8rem;
            font-weight: 500;
        }
        
        .date-number {
            font-size: 1.2rem;
            font-weight: bold;
        }
        
        .date-month {
            font-size: 0.8rem;
        }
        
        .theater-item {
            display: block;
            padding: 15px;
            margin-bottom: 10px;
            border-radius: 8px;
            background: #f8f9fa;
            color: inherit;
            text-decoration: none;
            transition: all 0.3s ease;
        }
        
        .theater-item:hover {
            background: #e9ecef;
        }
        
        .showtime-list {
            margin-bottom: 15px;
        }
        
        .cinema-name {
            margin-bottom: 10px;
        }
        
        .showtime-buttons {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
        }
        
        .showtime-btn {
            min-width: 100px;
            padding: 8px;
            text-align: center;
        }
        
        .showtime-btn .time {
            font-weight: bold;
        }
        
        .showtime-btn .seats,
        .showtime-btn .price {
            font-size: 0.8rem;
        }
        
        /* Booking Progress */
        .booking-progress {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
        }
        
        .progress-step {
            display: flex;
            flex-direction: column;
            align-items: center;
            position: relative;
            flex: 1;
        }
        
        .step-number {
            width: 30px;
            height: 30px;
            border-radius: 50%;
            background-color: #e9ecef;
            color: #6c757d;
            display: flex;
            justify-content: center;
            align-items: center;
            font-weight: bold;
            margin-bottom: 5px;
            transition: all 0.3s ease;
        }
        
        .step-text {
            font-size: 0.9rem;
            color: #6c757d;
            text-align: center;
        }
        
        .progress-connector {
            flex-grow: 1;
            height: 3px;
            background-color: #e9ecef;
            margin: 0 10px;
            position: relative;
            top: -15px;
        }
        
        .progress-step.completed .step-number {
            background-color: var(--bs-success);
            color: white;
        }
        
        .progress-step.active .step-number {
            background-color: var(--bs-primary);
            color: white;
            transform: scale(1.2);
        }
        
        .progress-connector.completed {
            background-color: var(--bs-success);
        }
    </style>
}