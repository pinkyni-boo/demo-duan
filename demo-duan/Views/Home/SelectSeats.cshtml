@model demo_duan.Models.Showtime

@{
    ViewData["Title"] = "Chọn ghế - " + Model.Movie.Title;
    var bookedSeats = ViewBag.BookedSeats as List<string> ?? new List<string>();
}

<div class="container mt-4">
    <!-- Booking Progress -->
    <div class="booking-progress mb-4">
        <div class="progress-step completed">
            <div class="step-number">1</div>
            <div class="step-text">Chọn phim</div>
        </div>
        <div class="progress-connector completed"></div>
        
        <div class="progress-step completed">
            <div class="step-number">2</div>
            <div class="step-text">Chọn suất chiếu</div>
        </div>
        <div class="progress-connector completed"></div>
        
        <div class="progress-step active">
            <div class="step-number">3</div>
            <div class="step-text">Chọn ghế</div>
        </div>
        <div class="progress-connector"></div>
        
        <div class="progress-step">
            <div class="step-number">4</div>
            <div class="step-text">Thanh toán</div>
        </div>
    </div>

    <div class="row">
        <!-- Thông tin phim -->
        <div class="col-md-4 mb-4">
            <div class="card shadow-sm h-100">
                <div class="row g-0">
                    <div class="col-md-4">
                        <img src="@Model.Movie.Img" class="img-fluid rounded-start h-100" style="object-fit: cover;" alt="@Model.Movie.Title">
                    </div>
                    <div class="col-md-8">
                        <div class="card-body">
                            <h5 class="card-title">@Model.Movie.Title</h5>
                            <div class="text-muted small mb-2">
                                @Model.Movie.Category?.Name | @Model.Movie.Duration phút
                            </div>
                            <hr />
                            <div class="movie-info">
                                <div class="info-item">
                                    <i class="fas fa-calendar-day"></i>
                                    <span>@Model.ShowDate.ToString("dd/MM/yyyy")</span>
                                </div>
                                <div class="info-item">
                                    <i class="fas fa-clock"></i>
                                    <span>@Model.ShowTime.ToString(@"hh\:mm")</span>
                                </div>
                                <div class="info-item">
                                    <i class="fas fa-building"></i>
                                    <span>@Model.Cinema.Theater.Name</span>
                                </div>
                                <div class="info-item">
                                    <i class="fas fa-tv"></i>
                                    <span>@Model.Cinema.Name</span>
                                </div>
                                <div class="info-item">
                                    <i class="fas fa-ticket-alt"></i>
                                    <span>@Model.Price.ToString("N0") đ / vé</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Sơ đồ chỗ ngồi -->
        <div class="col-md-8">
            <div class="card shadow-sm">
                <div class="card-body">
                    <h5 class="card-title">Chọn ghế ngồi</h5>
                    <p class="text-muted">Phòng: @Model.Cinema.Name - @Model.Cinema.Type</p>

                    <!-- Màn hình -->
                    <div class="screen-container">
                        <div class="screen">MÀN HÌNH</div>
                    </div>

                    <!-- Sơ đồ ghế -->
                    <div class="seat-map-container">
                        @{
                            // Định nghĩa số hàng và số cột (tùy chỉnh theo phòng)
                            int rows = 10;
                            int cols = 10;
                            char[] rowLabels = { 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J' };
                        }

                        <!-- Nhãn cột -->
                        <div class="seat-row seat-labels">
                            <div class="seat-label empty"></div>
                            @for (int col = 1; col <= cols; col++)
                            {
                                <div class="seat-label">@col</div>
                            }
                        </div>

                        <!-- Các hàng ghế -->
                        @for (int row = 0; row < rows; row++)
                        {
                            <div class="seat-row">
                                <div class="seat-label">@rowLabels[row]</div>
                                @for (int col = 1; col <= cols; col++)
                                {
                                    string seatId = $"{rowLabels[row]}{col}";
                                    bool isBooked = bookedSeats.Contains(seatId);
                                    bool isVIP = row >= 4 && row <= 6 && col >= 3 && col <= 8;
                                    string seatClass = isBooked ? "booked" : (isVIP ? "vip" : "standard");

                                    <div class="seat @seatClass" 
                                         data-seat-id="@seatId" 
                                         data-price="@(isVIP ? Math.Round(Model.Price * 1.5m) : Model.Price)"
                                         @(isBooked ? "disabled" : "")>
                                        <span class="seat-number">@col</span>
                                    </div>
                                }
                            </div>
                        }
                    </div>

                    <!-- Chú thích -->
                    <div class="seat-legend">
                        <div class="legend-item">
                            <div class="seat-sample standard"></div>
                            <span>Ghế thường</span>
                        </div>
                        <div class="legend-item">
                            <div class="seat-sample vip"></div>
                            <span>Ghế VIP</span>
                        </div>
                        <div class="legend-item">
                            <div class="seat-sample selected"></div>
                            <span>Đang chọn</span>
                        </div>
                        <div class="legend-item">
                            <div class="seat-sample booked"></div>
                            <span>Đã đặt</span>
                        </div>
                    </div>

                    <!-- Thông tin đặt vé -->
                    <div class="booking-summary card mt-3">
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-8">
                                    <h6>Ghế đã chọn: <span id="selected-seats">Chưa chọn ghế</span></h6>
                                    <p class="mb-0 small text-muted">Vui lòng chọn ghế để tiếp tục</p>
                                </div>
                                <div class="col-md-4 text-end">
                                    <h6>Tổng tiền: <span id="total-price">0 đ</span></h6>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Nút điều hướng -->
                    <div class="d-flex justify-content-between mt-3">
                        <a href="@Url.Action("BookTicket", new { id = Model.MovieId })" class="btn btn-outline-secondary">
                            <i class="fas fa-arrow-left me-2"></i>Quay lại
                        </a>
                        
                        <form id="payment-form" action="@Url.Action("Payment", "Home")" method="post">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="showtimeId" value="@Model.Id">
                            <input type="hidden" id="selectedSeatsInput" name="selectedSeats">
                            <input type="hidden" id="totalPriceInput" name="totalPrice">
                            <button type="submit" id="continueBtn" class="btn btn-primary" disabled>
                                Tiếp tục <i class="fas fa-arrow-right ms-2"></i>
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        /* Booking progress */
        .booking-progress {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
        }
        
        .progress-step {
            display: flex;
            flex-direction: column;
            align-items: center;
            z-index: 1;
        }
        
        .step-number {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background-color: #e9ecef;
            color: #6c757d;
            display: flex;
            justify-content: center;
            align-items: center;
            font-weight: bold;
            margin-bottom: 0.5rem;
        }
        
        .progress-step.active .step-number {
            background-color: #007bff;
            color: white;
        }
        
        .progress-step.completed .step-number {
            background-color: #28a745;
            color: white;
        }
        
        .progress-connector {
            flex-grow: 1;
            height: 4px;
            background-color: #e9ecef;
            margin: 0 8px;
            position: relative;
            top: -20px;
        }
        
        .progress-connector.completed {
            background-color: #28a745;
        }
        
        /* Movie info */
        .movie-info .info-item {
            display: flex;
            align-items: center;
            margin-bottom: 8px;
        }
        
        .movie-info .info-item i {
            width: 20px;
            margin-right: 10px;
            color: #6c757d;
        }
        
        /* Screen */
        .screen-container {
            margin: 30px 0;
            text-align: center;
            perspective: 300px;
        }
        
        .screen {
            background: linear-gradient(to bottom, #ccc, #efefef);
            height: 25px;
            width: 100%;
            transform: rotateX(-30deg);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
            color: #555;
            font-weight: bold;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 5px;
            letter-spacing: 2px;
        }
        
        /* Seat map */
        .seat-map-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 8px;
            margin-bottom: 30px;
        }
        
        .seat-row {
            display: flex;
            gap: 8px;
        }
        
        .seat-label {
            width: 30px;
            height: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            color: #495057;
        }
        
        .seat-label.empty {
            visibility: hidden;
        }
        
        .seat {
            width: 40px;
            height: 40px;
            border-radius: 8px 8px 0 0;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.2s;
            color: #495057;
            position: relative;
            overflow: hidden;
            user-select: none;
        }
        
        .seat.standard {
            background-color: #a8dadc;
            border: 1px solid #76c2c5;
        }
        
        .seat.vip {
            background-color: #ffd166;
            border: 1px solid #e9bc5c;
        }
        
        .seat.booked {
            background-color: #dee2e6;
            border: 1px solid #ced4da;
            cursor: not-allowed;
            color: #adb5bd;
        }
        
        .seat.selected {
            background-color: #7ae582;
            border: 1px solid #57cc5e;
            color: #212529;
        }
        
        .seat:not(.booked):hover {
            transform: scale(1.1);
            box-shadow: 0 0 8px rgba(0, 0, 0, 0.2);
        }
        
        .seat-number {
            font-size: 0.8rem;
            font-weight: bold;
        }
        
        /* Seat legend */
        .seat-legend {
            display: flex;
            justify-content: center;
            flex-wrap: wrap;
            gap: 20px;
            margin: 20px 0;
        }
        
        .legend-item {
            display: flex;
            align-items: center;
            gap: 8px;
        }
        
        .seat-sample {
            width: 20px;
            height: 20px;
            border-radius: 4px;
        }
        
        .seat-sample.standard {
            background-color: #a8dadc;
            border: 1px solid #76c2c5;
        }
        
        .seat-sample.vip {
            background-color: #ffd166;
            border: 1px solid #e9bc5c;
        }
        
        .seat-sample.selected {
            background-color: #7ae582;
            border: 1px solid #57cc5e;
        }
        
        .seat-sample.booked {
            background-color: #dee2e6;
            border: 1px solid #ced4da;
        }
        
        /* Responsive */
        @@media (max-width: 767px) {
            .seat {
                width: 30px;
                height: 30px;
                font-size: 0.7rem;
            }
            
            .seat-label {
                width: 25px;
                height: 25px;
                font-size: 0.8rem;
            }
            
            .seat-row {
                gap: 5px;
            }
            
            .seat-map-container {
                gap: 5px;
                overflow-x: auto;
                max-width: 100%;
                padding-bottom: 10px;
            }
        }
    </style>
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Các phần tử DOM
            const seats = document.querySelectorAll('.seat:not(.booked)');
            const selectedSeatsElement = document.getElementById('selected-seats');
            const totalPriceElement = document.getElementById('total-price');
            const selectedSeatsInput = document.getElementById('selectedSeatsInput');
            const totalPriceInput = document.getElementById('totalPriceInput');
            const continueBtn = document.getElementById('continueBtn');
            
            // Các biến theo dõi
            let selectedSeats = [];
            let totalPrice = 0;
            
            // Xử lý sự kiện chọn ghế
            seats.forEach(seat => {
                seat.addEventListener('click', function() {
                    const seatId = this.getAttribute('data-seat-id');
                    const price = parseFloat(this.getAttribute('data-price'));
                    
                    if (this.classList.contains('selected')) {
                        // Bỏ chọn ghế
                        this.classList.remove('selected');
                        const index = selectedSeats.findIndex(s => s.id === seatId);
                        if (index !== -1) {
                            totalPrice -= selectedSeats[index].price;
                            selectedSeats.splice(index, 1);
                        }
                    } else {
                        // Chọn ghế
                        this.classList.add('selected');
                        selectedSeats.push({
                            id: seatId,
                            price: price
                        });
                        totalPrice += price;
                    }
                    
                    // Cập nhật hiển thị
                    updateSelectionDisplay();
                });
            });
            
            // Hàm cập nhật hiển thị
            function updateSelectionDisplay() {
                if (selectedSeats.length > 0) {
                    // Sắp xếp ghế theo thứ tự
                    const sortedSeats = [...selectedSeats].sort((a, b) => {
                        if (a.id[0] !== b.id[0]) {
                            return a.id[0].localeCompare(b.id[0]);
                        }
                        return parseInt(a.id.substring(1)) - parseInt(b.id.substring(1));
                    });
                    
                    // Hiển thị danh sách ghế đã chọn
                    selectedSeatsElement.textContent = sortedSeats.map(s => s.id).join(', ');
                    
                    // Cập nhật tổng tiền
                    totalPriceElement.textContent = formatCurrency(totalPrice);
                    
                    // Cập nhật giá trị input hidden
                    selectedSeatsInput.value = sortedSeats.map(s => s.id).join(',');
                    totalPriceInput.value = totalPrice;
                    
                    // Kích hoạt nút tiếp tục
                    continueBtn.disabled = false;
                } else {
                    // Reset lại các thông tin
                    selectedSeatsElement.textContent = 'Chưa chọn ghế';
                    totalPriceElement.textContent = '0 đ';
                    selectedSeatsInput.value = '';
                    totalPriceInput.value = '';
                    continueBtn.disabled = true;
                }
            }
            
            // Định dạng tiền tệ
            function formatCurrency(amount) {
                return new Intl.NumberFormat('vi-VN').format(amount) + ' đ';
            }
            
            // Kiểm tra trước khi gửi form
            document.getElementById('payment-form').addEventListener('submit', function(e) {
                if (selectedSeats.length === 0) {
                    e.preventDefault();
                    alert('Vui lòng chọn ít nhất một ghế để tiếp tục!');
                }
            });
        });
    </script>
}